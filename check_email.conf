object CheckCommand "check_email" {
  command = [ PluginDir + "/check_email.py" ]

  arguments = {
    "-ih" = {
      value = "$check_email_imap_host$"
      description = "The host address or FQDN of the IMAP server"
    }
    "-ip" = {
      value= "$check_email_imap_port$"
      description = "The port of the IMAP server"
    }
    "-iusr" = {
      value= "$check_email_imap_user$"
      description = "The username for IMAP default: (env IMAP_USERNAME)"
    }
    "-ipw" = {
      value= "$check_email_imap_password$"
      description = "The password for IMAP default: (env IMAP_PASSWORD)"
    }
    "-sh" = {
      value= "$check_email_smtp_host$"
      description = "The host address or FQDN of the SMTP server"
    }
    "-sp" = {
      value= "$check_email_smtp_port$"
      description = "The port of the SMTP server"
    }
    "-susr" = {
      value= "$check_email_smtp_user$"
      description = "The username for SMTP default: (env SMTP_USERNAME)"
    }
    "-spw" = {
      value= "$check_email_smtp_password$"
      description = "The password for SMTP default: (env SMTP_PASSWORD)"
    }
    "--sender" = {
      value = "$check_email_sender$"
      description = "Sender email e.g. sender@mail.com"
    }
    "--receiver" = {
      value = "$check_email_receiver$"
      description = "Receiver email e.g. receiver@mail.com"
    }
    "-w" = {
      value = "$check_email_warning$"
      description = "The value of warning threshold in seconds default: 300s"
    }
    "-c" = {
      value = "$check_email_critical$"
      description = "The value of critical threshold in seconds default: 500s"
    }
    "--imap_mailbox" = {
      value = "$check_email_imap_mailbox$"
      description = "The mailbox which should be checked"
    }
    "--echo_reply" = {
      value = "$check_email_echo_reply$"
      description = "Checks for echo reply from mail server default: False"
    }
    "--imap_sender_host" = {
      value = "$check_email_imap_sender_host$"
      description = "The host address or FQDN of the IMAP server which send the mail"
    }
    "--imap_sender_port" = {
      value = "$check_email_imap_sender_port$"
      description = "The port of the IMAP server which send the mail"
    }
    "--imap_sender_user" = {
      value = "$check_email_imap_sender_user$"
      description = "The username for IMAP, who receive the echo reply default:(env IMAP_SENDER_USER)'"
    }
    "--imap_sender_password" = {
      value = "$check_email_imap_sender_password$"
      description = "The password for IMAP user, who receive the echo reply default:(env IMAP_SENDER_PASSWORD'"
    }
    "--imap_sender_mailbox" = {
      value = "$check_email_imap_sender_mailbox$"
      description = "The mailbox which should be checked for echo reply"
    }
    "--critical_reply" = {
      value = "$check_email_critical_reply$"
      description = "The critical threshold for echo reply"
    }
    "--warning_reply" = {
      value = "$check_email_warning_reply$"
      description = "The warning threshold for echo reply"
    }
    "--cleanup" = {
      value = "$check_email_cleanup$"
      description = "Deletes old mails default: False"
    }
    "--cleanup_time" = {
      value = "$check_email_cleanup_time$"
      description = "Deletes mails older then x seconds default: 3600s"
    }
    "--reply_name" = {
      value = "$check_email_reply_name$"
      description = "Specifies the name the of the reply, e.g. 'My Echo'"
    }
}

object Host "check_mail" {
  check_command = "dummy"
  vars.server_type = "mail"
}

apply Service "check_email_standalone" {
  check_command = "check_email"
  check_timeout = 10m
  check_interval = 10m
  retry_interval = 10m

  vars.check_mail_imap_host =
  vars.check_mail_imap_port =
  vars.check_mail_imap_user =
  vars.check_mail_imap_password =

  vars.check_mail_smtp_host =
  vars.check_mail_smtp_port =
  vars.check_mail_smtp_user =
  vars.check_mail_smtp_password =

  vars.check_mail_sender =
  vars.check_mail_receiver =
  vars.check_mail_warning =
  vars.check_mail_critical =
  vars.check_mail_imap_mailbox =

  assign where host.vars.server_type == "mail"
}

apply Service "check_email_loop" {
  check_command = "check_email"
  check_timeout = 10m
  check_interval = 10m
  retry_interval = 10m

  vars.check_email_imap_host =
  vars.check_email_imap_port =
  vars.check_email_imap_user =
  vars.check_email_imap_password =

  vars.check_email_smtp_host =
  vars.check_email_smtp_port =
  vars.check_email_smtp_user =
  vars.check_email_smtp_password =

  vars.check_email_sender =
  vars.check_email_receiver =
  vars.check_email_warning =
  vars.check_email_critical =
  vars.check_email_imap_mailbox =

  vars.check_email_echo_reply =
  vars.check_email_reply_name = 
  vars.check_email_imap_sender_host = 
  vars.check_email_imap_sender_port =
  vars.check_email_imap_sender_user =
  vars.check_email_imap_sender_password =
  vars.check_email_imap_sender_mailbox =
  vars.check_email_warning_reply =
  vars.check_email_critical_reply =

  vars.check_email_cleanup =
  vars.check_email_cleanup_time =

  assign where host.vars.server_type == "mail"
}